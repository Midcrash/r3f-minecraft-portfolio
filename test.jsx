/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useSpring } from "react-spring";
import { useFrame } from "@react-three/fiber";

export default function Model({ ...props }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("../../../enchanttable.glb");
  const { actions } = useAnimations(animations, group);

  const bookAnimationOver = () => {
    actions.BookCycle.reset();
    actions.BookCycle.fadeIn(0.2);
    actions.BookCycle.play();
  };

  const bookAnimationOut = () => {
    actions.BookCycle.fadeOut(1);
  };

  const bookRef = useRef();

  // useFrame((state, delta) => (bookRef.current.rotation.y += 0.01));

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group
          name="enchanting_table_top"
          position={[0.5, 0.5, -0.5]}
          castShadow
        >
          <mesh
            name="Cube008"
            geometry={nodes.Cube008.geometry}
            material={materials["enchanting_table_top.001"]}
            onPointerOver={bookAnimationOver}
            onPointerOut={bookAnimationOut}
          />
          <mesh
            name="Cube008_1"
            geometry={nodes.Cube008_1.geometry}
            material={materials["enchanting_table_side.001"]}
          />
          <mesh
            name="Cube008_2"
            geometry={nodes.Cube008_2.geometry}
            material={materials["enchanting_table_bottom.001"]}
          />
          <group name="enchantbookarma" position={[0, 0.42, 0]}>
            <primitive object={nodes.main} ref={bookRef} />
            <skinnedMesh
              name="book"
              geometry={nodes.book.geometry}
              material={materials.enchanting_table_book}
              skeleton={nodes.book.skeleton}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("../../../enchanttable.glb");
